# Android
# Build your Android project with Gradle.
# Add steps that test, sign, and distribute the APK, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/android

trigger:
- azure-pipelines

pool:
  vmImage: 'macos-latest'

variables:
  sonarCloudToken: $(SONAR_TOKEN)

steps:
- task: Gradle@2
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    publishJUnitResults: false
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'assembleDebug'

# SonarCloud analysis
- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'SonarCloud-DevOps'  # Configura esta conexión en el Azure DevOps portal
    organization: 'financieraoh'
    scannerMode: 'MSBuild'
    projectKey: 'alan-prueba-anroid'
    projectName: 'escaneo de codigo Android Gradle'
  
- task: Gradle@2
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    publishJUnitResults: false
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'sonarQube'  # Este es el task que ejecuta el análisis de SonarCloud

#Copea el Archivo APK generado
- task: CopyFiles@2
  inputs:
    contents: '**/build/outputs/**/*.apk'
    targetFolder: '$(Build.ArtifactStagingDirectory)'
  displayName: 'Copy APK to staging directory'

#publica los archivos APK como artefactos en el Build
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
  displayName: 'Publish Artifact'
