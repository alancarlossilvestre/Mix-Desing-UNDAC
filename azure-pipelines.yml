# Android
# Build your Android project with Gradle.
# Add steps that test, sign, and distribute the APK, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/android

trigger:
- azure-pipelines

pool:
  vmImage: 'macos-latest'

steps:
- task: Gradle@2
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    publishJUnitResults: false
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'assembleDebug'

#Copea el Archivo APK generado
- task: CopyFiles@2
  inputs:
    contents: '**/build/outputs/**/*.apk'
    targetFolder: '$(Build.ArtifactStagingDirectory)'
  displayName: 'Copy APK to staging directory'

#publica los archivos APK como artefactos en el Build
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
  displayName: 'Publish Artifact'

- script: |
    echo "============Listing files in the drop directory:"
    ls $(System.DefaultWorkingDirectory)/drop/
    echo "################The path of the APK is:"
    find $(System.DefaultWorkingDirectory)/drop/ -name '*.apk'
  displayName: 'List APK file and path'
  
- task: AppCenterDistribute@3
  displayName: 'Distribuci√≥n de APK Android'
  inputs:
    serverEndpoint: 'app-center'
    appSlug: 'owner-name/mix-desing'
    appFile: '$(System.DefaultWorkingDirectory)/drop/*.apk'  # Ruta al archivo APK
    symbolsIncludeParentDirectory: false
    releaseNotesInput: 'esto es una prueba'
    isSilent: false